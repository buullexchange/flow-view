class h{static generateId(t){const e=Math.random().toString(36).replace(/[^a-z]+/g,"").substr(0,5);return t.getElementById(e)?h.generateId(t):e}constructor({cssClassName:t,id:e,shadowDom:s,...i}){this.shadowDom=s;const n=this.element=document.createElement("div");n.classList.add(t);const a=e||h.generateId(s);n.setAttribute("id",a),s.appendChild(n),this.init(i)}init(){}get id(){return this.element.getAttribute("id")}createDiv(t){const e=document.createElement("div");return e.classList.add(t),this.element.appendChild(e),e}}export{h as FlowViewBase};class d extends h{static cssClassName="fv-edge";static width=2;static style={[`.${d.cssClassName}`]:{display:"inline-block",position:"absolute"},[`.${d.cssClassName} line`]:{stroke:"var(--fv-connection-color)","stroke-width":d.width},[`.${d.cssClassName} line:hover`]:{stroke:"var(--fv-highlighted-connection-color)"}}}export{d as FlowViewEdge};class o extends h{static cssClassName="fv-pin";static size=10;static style={[`.${o.cssClassName}`]:{"background-color":"var(--fv-connection-color)",display:"block",width:`${o.size}px`,height:`${o.size}px`}}}export{o as FlowViewPin};class c extends h{static cssClassName="fv-node";static minSize=o.size*4;static style={[`.${c.cssClassName}`]:{position:"absolute","background-color":"var(--fv-node-background-color, #fefefe)","box-shadow":"var(--fv-box-shadow)",display:"flex","flex-direction":"column","justify-content":"space-between",border:"1px solid transparent","min-height":`${c.minSize}px`,"min-width":`${c.minSize}px`,width:"fit-content"},[`.${c.cssClassName} .label`]:{"user-select":"none","padding-left":"0.5em","padding-right":"0.5em"},[`.${c.cssClassName} .pins`]:{display:"flex","flex-direction":"row","justify-content":"space-between",height:`${o.size}px`}};init({label:t,inputs:e=[],outputs:s=[],x:i,y:n,view:a}){this.view=a,this.inputs=new Map,this.inputListElement=this.createDiv("pins");for(const l of e)this.newInput(l);this.labelElement=this.createDiv("label"),this.label=t,this.outputs=new Map,this.outputListElement=this.createDiv("pins");for(const l of s)this.newOutput(l);this.position={x:i,y:n}}get label(){return this.labelElement.textContent}set label(t){this.labelElement.textContent=t}get position(){return{x:this.x,y:this.y}}set position({x:t=0,y:e=0}={}){const{element:s,view:i}=this;this.x=t,this.y=e,s.style.top=`${e-i.origin.y}px`,s.style.left=`${t-i.origin.x}px`}onViewOriginUpdate(){const{x:t,y:e}=this.position;this.position={x:t,y:e}}newInput({id:t}){const e=new o({id:t,shadowDom:this.shadowDom,cssClassName:o.cssClassName});this.inputs.set(e.id,e),this.inputListElement.appendChild(e.element)}newOutput({id:t}){const e=new o({id:t,shadowDom:this.shadowDom,cssClassName:o.cssClassName});this.outputs.set(e.id,e),this.outputListElement.appendChild(e.element)}}export{c as FlowViewNode};class r extends HTMLElement{static customElementName="flow-view";static minHeight=200;static style={":host([hidden])":{display:"none"},":host":{"--fv-box-shadow":"0px 0px 7px 1px rgba(0, 0, 0, 0.1)","--fv-connection-color":"#ccc",position:"relative",display:"block",overflow:"hidden",border:0,margin:0,"background-color":"var(--fv-canvas-background-color, #fefefe)","box-shadow":"var(--fv-box-shadow)","font-family":"var(--fv-font-family, sans-serif)","font-size":"var(--fv-font-size, 17px)",color:"var(--fv-text-color, #111)"},...d.style,...c.style,...o.style};static generateStylesheet(t){return Object.entries(t).reduce((e,[s,i])=>[e,`${s} {`,Object.entries(i).map(([n,a])=>`  ${n}: ${a};`).join(`
`),"}"].join(`
`),"")}static pointerCoordinates(t){const{clientX:e,clientY:s,target:i}=t,{left:n,top:a}=i.getBoundingClientRect(),l=Math.round(e-n),p=Math.round(s-a);return{x:l,y:p}}constructor(){super();const t=document.createElement("template");t.innerHTML=`<style>${r.generateStylesheet(r.style)}</style>`,this.attachShadow({mode:"open"}).appendChild(t.content.cloneNode(!0)),this._origin={x:0,y:0},this.nodes=new Map,this.edges=new Map}connectedCallback(){this.canResize?(this.rootResizeObserver=new ResizeObserver(this.onRootResize.bind(this)),this.rootResizeObserver.observe(this.parentNode)):this.height=this.getAttribute("height")||r.minHeight,this.addEventListener("pointerdown",this.onPointerdown),this.addEventListener("pointermove",this.onPointermove),this.addEventListener("pointerleave",this.onPointerleave),this.addEventListener("pointerup",this.onPointerup)}disconnectedCallback(){this.canResize&&this.rootResizeObserver.unobserve(this.parentNode),this.removeEventListener("pointerdown",this.onPointerdown),this.removeEventListener("pointermove",this.onPointermove),this.removeEventListener("pointerleave",this.onPointerleave),this.removeEventListener("pointerup",this.onPointerup)}get canResize(){return"ResizeObserver"in window}get origin(){return this.translateVector?{x:this._origin.x+this.translateVector.x,y:this._origin.y+this.translateVector.y}:this._origin}set width(t){this.style.width=`${t}px`}set height(t){this.style.height=`${t}px`}startTranslate(t){this.startDraggingPoint=r.pointerCoordinates(t),this.translateVector={x:0,y:0}}stopTranslate(){this.translateVector&&(this._origin={x:this._origin.x+this.translateVector.x,y:this._origin.y+this.translateVector.y},this.translateVector=void 0),this.startDraggingPoint=void 0}onPointerdown(t){this.startTranslate(t)}onPointermove(t){const{startDraggingPoint:e}=this;if(e){const s=r.pointerCoordinates(t);this.translateVector={x:e.x-s.x,y:e.y-s.y};for(const i of this.nodes.values())i.onViewOriginUpdate()}}onPointerleave(){this.stopTranslate()}onPointerup(){this.stopTranslate()}onRootResize(t){for(const e of t){const s=Array.isArray(e.contentBoxSize)?e.contentBoxSize[0]:e.contentBoxSize;this.width=s.inlineSize,this.height=s.blockSize-10}}}class m{static defaultItems={node:c};static defineCustomElement(){const{customElementName:t}=r;window.customElements.get(t)||window.customElements.define(t,r)}constructor({container:t,element:e}={}){m.defineCustomElement();const s=this.itemClass=new Map;Object.entries(m.defaultItems).forEach(([i,n])=>{s.set(i,n)}),e instanceof r?this.view=e:(this.view=document.createElement(r.customElementName),e.parentNode||(t instanceof HTMLElement?t.appendChild(e):document.body.appendChild(e)))}connect(t,e=0){return{to:(s,i)=>{const n=t.output(e);element.classList.add(className);const a=s.input(i);return this.newEdge({from:[t.id,n.id].join(),to:[s.id,a.id].join()})}}}loadGraph({nodes:t=[],edges:e=[]}){if(!Array.isArray(t)||!Array.isArray(e))throw new TypeError("Invalid graph");for(const s of t)this.newNode(s);for(const s of e)this.newEdge(s)}newEdge({from:t,to:e}){const s=this.itemClass.get("edge"),i=new s({id,shadowDom:this.view.shadowRoot,cssClassName:s.cssClassName,from:t,to:e});return this.view.edges.set(i.id,i),i}newNode({x:t=0,y:e=0,label:s="node",id:i,nodeType:n="node",inputs:a=[],outputs:l=[]}={}){const p=this.itemClass.get(n),u=new p({id:i,shadowDom:this.view.shadowRoot,cssClassName:p.cssClassName,label:s,inputs:a,outputs:l,x:t,y:e,view:this.view});return this.view.nodes.set(u.id,u),u}}export{r as FlowViewElement};export{m as FlowView};
