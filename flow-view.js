class r extends HTMLElement{constructor(t="",e="<slot></slot>"){super();const n=document.createElement("template"),i={":host([hidden])":{display:"none"}};n.innerHTML=`<style>${r.generateStylesheet({...i,...t})}</style>${e}`,this.attachShadow({mode:"open"}).appendChild(n.content.cloneNode(!0))}static elementName={canvas:"fv-canvas",node:"fv-node",link:"fv-link",pin:"fv-pin"};static get observedAttributes(){return["id"]}static generateStylesheet(t){return Object.entries(t).reduce((e,[n,i])=>[e,`${n} {`,Object.entries(i).map(([o,s])=>`  ${o}: ${s};`).join(`
`),"}"].join(`
`),"")}static generateId(){const t=Math.random().toString(36).replace(/[^a-z]+/g,"").substr(0,5);return document.getElementById(t)?r.generateId():t}connectedCallback(){const t=this.id||r.generateId();Object.defineProperty(this,"_id",{value:t,writable:!1}),this.setAttribute("id",t)}disconnectedCallback(){}attributeChangedCallback(t,e,n){if(e!==n)switch(t){case"id":{e!==null&&n!==this._id&&this.setAttribute("id",this._id);break}}}get canvas(){const{parentNode:t}=this;return t&&t.tagName===r.elementName.canvas.toUpperCase()?t:null}}class g extends r{static customElementName=r.elementName.canvas;constructor(){super({":host":{"--fv-shadow-color":"rgba(0, 0, 0, 0.17)","--fv-connection-color":"#ccc","--fv-highlighted-connection-color":"#aaa","font-family":"var(--fv-font-family, sans-serif)","font-size":"var(--fv-font-size, 17px)",display:"block",overflow:"hidden","background-color":"var(--fv-canvas-background-color, #fefefe)","box-shadow":"1px 1px 7px 1px var(--fv-shadow-color)",width:"100%",height:"100%",position:"relative"}})}static get observedAttributes(){return r.observedAttributes}getItemById(t){for(const e of this.children)if(e.id===t)return e}}export{g as FlowViewCanvas};const z=10;class l extends r{static customElementName=r.elementName.pin;static size=10;constructor(){super({":host":{"background-color":"var(--fv-connection-color)",display:"block",width:`${l.size}px`,height:`${l.size}px`},":host(:hover)":{"background-color":"var(--fv-highlighted-connection-color)"}})}static get observedAttributes(){return r.observedAttributes.concat(["name"])}static centerOfPin(t,e){const n=1,i=Math.round(l.size/2);if(t){const o=Number(t.getAttribute("x")),s=Number(t.getAttribute("y"));if(e==="input")return{x:o+i,y:s+i};if(e==="output"){const c=Number(t.getAttribute("height"));return{y:s+c-i-1,x:o+i+1}}}}attributeChangedCallback(t,e,n){if(e!==n)switch(super.attributeChangedCallback(t,e,n),t){case"name":{this.name=n;break}}}disconnectedCallback(){super.disconnectedCallback();const{node:t}=this;t&&this.removeEventListener("pointerdown",this.onpointerdown)}onpointerdown(t){t.stopPropagation()}get node(){return l.nodeOfPin(this)}}export{z as pinSize};export{l as FlowViewPin};class m extends r{static customElementName=r.elementName.link;static width=2;constructor(){super({":host":{display:"inline-block",position:"absolute",border:"1px solid transparent"},line:{stroke:"var(--fv-connection-color)","stroke-width":m.width},"line:hover":{stroke:"var(--fv-highlighted-connection-color)"}},"<slot><svg><line></line></svg></slot>")}static get observedAttributes(){return r.observedAttributes.concat(["from","to"])}attributeChangedCallback(t,e,n){const{canvas:i}=this;if(e!==n){switch(super.attributeChangedCallback(t,e,n),t){case"from":{const[o,s]=n.split(","),c=i.getItemById(o);this.sourceNode=c,this.sourcePin=c.getOutputById(s);break}case"to":{const[o,s]=n.split(","),c=i.getItemById(o);this.targetNode=c,this.targetPin=c.getInputById(s);break}}["from","to"].includes(t)&&this.updateGeometry()}}set dimension([t,e]){const{style:n,svg:i}=this;n.width=`${t}px`,n.height=`${e}px`,i.setAttribute("width",t),i.setAttribute("height",e)}get line(){return this.shadowRoot.querySelector("line")}set position([t,e]){this.style.top=`${e}px`,this.style.left=`${t}px`}get svg(){return this.shadowRoot.querySelector("svg")}updateGeometry(){const{line:t,sourceNode:e,sourcePin:n,targetNode:i,targetPin:o}=this;if([e,n,i,o].some(C=>!C)){this.position=[0,0],this.dimension=[0,0];return}const s=l.centerOfPin(e,"output"),c=l.centerOfPin(i,"input"),a=c.x<s.x,d=c.y<s.y,h=a?c.x:s.x,v=d?c.y:s.y;this.position=[h,v];const p=Math.abs(c.x-s.x),b=Math.abs(c.y-s.y);this.dimension=[p,b];const k=a?p:0,w=d?b:0,A=a?0:p,E=d?0:b;t.setAttribute("x1",k),t.setAttribute("y1",w),t.setAttribute("x2",A),t.setAttribute("y2",E)}}export{m as FlowViewLink};class u extends r{static customElementName=r.elementName.node;static minSize=l.size*4;constructor(){super({":host":{"box-sizing":"border-box","background-color":"var(--fv-node-background-color, #fefefe)",position:"absolute","box-shadow":"1px 1px 7px 1px var(--fv-shadow-color)",display:"flex","flex-direction":"column","justify-content":"space-between",border:"1px solid transparent"},".pin-list":{display:"flex","flex-direction":"row","justify-content":"space-between","min-height":`${l.size}px`},".label":{cursor:"default","user-select":"none","padding-left":".5em"}},['<slot name="inputs"><div class="inputs pin-list"></div></slot>','<slot name="label"><span class="label"></span></slot>',"<slot></slot>",'<slot name="outputs"><div class="outputs pin-list"></div></slot>'].join(""))}static get observedAttributes(){return r.observedAttributes.concat(["label","x","y","width","height"])}attributeChangedCallback(t,e,n){if(e!==n)switch(super.attributeChangedCallback(t,e,n),t){case"label":{this.label=n;break}case"y":case"x":{const i=Math.round(n);typeof i=="number"&&(t==="y"&&(this.style.top=`${i}px`),t==="x"&&(this.style.left=`${i}px`));break}case"width":case"height":{const i=Math.round(n),{minSize:o}=u;o>i?this.setAttribute(t,o):this.style[t]=`${i}px`;break}}}connectedCallback(){super.connectedCallback();const{canvas:t}=this,{minSize:e}=u.minSize;t&&this.addEventListener("pointerdown",this.onpointerdown),this.getAttribute("width")||this.setAttribute("width",e),this.getAttribute("height")||this.setAttribute("height",e),this.getAttribute("x")||this.setAttribute("x",0),this.getAttribute("y")||this.setAttribute("y",0)}disconnectedCallback(){super.disconnectedCallback();const{canvas:t}=this;t&&this.removeEventListener("pointerdown",this.onpointerdown)}onpointerdown(t){const{clientX:e,clientY:n}=t,{canvas:i}=this,{left:o,top:s}=this.getBoundingClientRect(),c=e-o,a=n-s,d=v=>{const{pageX:p,pageY:b}=v;this.setAttribute("x",Math.round(p-c)),this.setAttribute("y",Math.round(b-a))},h=()=>{i.removeEventListener("pointermove",d),i.removeEventListener("pointerleave",h),i.removeEventListener("pointerup",h)};i.addEventListener("pointermove",d),i.addEventListener("pointerleave",h),i.addEventListener("pointerup",h)}set label(t){this.labelElement.textContent=t}get labelElement(){return this.shadowRoot.querySelector("span.label")}get inputsElement(){return this.shadowRoot.querySelector(".inputs")}get outputsElement(){return this.shadowRoot.querySelector(".outputs")}addInput(){const t=document.createElement(r.elementName.pin);this.inputsElement.appendChild(t)}addOutput(){const t=document.createElement(r.elementName.pin);this.outputsElement.appendChild(t)}input(t=0){return this.inputsElement.children[t]}output(t=0){return this.outputsElement.children[t]}getInputById(t){for(const e of this.inputsElement.children)if(e.id===t)return e}getOutputById(t){for(const e of this.outputsElement.children)if(e.id===t)return e}}export{u as FlowViewNode};const x=[g,m,u,l];function y(f=x){f.forEach(t=>{const{customElementName:e}=t;customElements.get(e)||customElements.define(e,t)})}export{y as flowViewInit};class N{constructor({root:t=document.body,customElements:e=x}={}){const n=this.container=document.createElement("div");n.style.boxSizing="border-block",n.style.display="inline-block",n.style.border=0,n.style.margin=0;const i=this.canvas=document.createElement(g.customElementName);n.appendChild(i),this.rootResizeObserver=new ResizeObserver(this.onRootResize.bind(this)),this.rootResizeObserver.observe(t),t.appendChild(n),y(e)}set width(t){this.container.style.width=`${t}px`}set height(t){this.container.style.height=`${t}px`}connect(t,e=0){return{to:(n,i)=>{const o=t.output(e),s=n.input(i);return this.newLink({from:[t.id,o.id].join(),to:[n.id,s.id].join()})}}}newLink({from:t,to:e}){const n=document.createElement(m.customElementName);return this.canvas.appendChild(n),n.setAttribute("from",t),n.setAttribute("to",e),n}newNode({x:t=0,y:e=0,width:n=u.minSize,height:i=u.minSize,label:o="node",inputs:s=[],outputs:c=[]}={}){const a=document.createElement(u.customElementName);this.canvas.appendChild(a),a.setAttribute("x",t),a.setAttribute("y",e),a.setAttribute("width",n),a.setAttribute("height",i),a.setAttribute("label",o);for(const d of s)a.addInput(d);for(const d of c)a.addOutput(d);return a}onRootResize(t){for(const e of t){const n=Array.isArray(e.contentBoxSize)?e.contentBoxSize[0]:e.contentBoxSize;this.width=n.inlineSize,this.height=n.blockSize-10}}}export{N as FlowView};
